<!--
    Copyright (C) 2011 Talend Inc. - www.talend.com
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:test="http://apache.org/hello_world_soap_http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
http://cxf.apache.org/core
http://cxf.apache.org/schemas/core.xsd
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://cxf.apache.org/jaxws
http://cxf.apache.org/schemas/jaxws.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>

    <cxf:bus>
        <cxf:features>
            <cxf:logging />
        </cxf:features>
    </cxf:bus>

    <bean id="x509STSProviderBean"
        class="org.apache.cxf.ws.security.sts.provider.SecurityTokenServiceProvider">
        <property name="issueOperation" ref="x509IssueDelegate" />
        <property name="validateOperation" ref="x509ValidateDelegate" />
    </bean>

    <bean id="x509IssueDelegate" class="org.apache.cxf.sts.operation.TokenIssueOperation">
        <property name="tokenProviders" ref="x509UsernameTokenProvider" />
        <property name="services" ref="x509Service" />
        <property name="stsProperties" ref="x509STSProperties" />
        <property name="returnReferences" value="false" />
    </bean>

    <bean id="x509ValidateDelegate" class="org.apache.cxf.sts.operation.TokenValidateOperation">
        <property name="tokenValidators" ref="x509UsernameTokenValidator" />
        <property name="tokenProviders" ref="x509SAMLTokenProvider" />
        <property name="stsProperties" ref="x509STSProperties" />
    </bean>

    <bean id="x509UsernameTokenProvider" class="sts.UsernameTokenProvider"/>
    
    <bean id="x509SAMLTokenProvider"
        class="org.apache.cxf.sts.token.provider.SAMLTokenProvider">
        <property name="attributeStatementProviders" ref="attributeStatementProvidersList" />
    </bean>
    
    <util:list id="attributeStatementProvidersList">
        <ref bean="customAttributeProvider"/>
    </util:list>
    
    <bean id="customAttributeProvider"
        class="sts.RoleAttributeProvider">
    </bean>
    
    <bean id="x509UsernameTokenValidator"
        class="org.apache.cxf.sts.token.validator.UsernameTokenValidator"/>

    <bean id="x509Service" class="org.apache.cxf.sts.service.StaticService">
        <property name="endpoints" ref="x509Endpoints" />
    </bean>

    <util:list id="x509Endpoints">
        <value>http://localhost:(8080|9000)/doubleit/services/doubleit.*</value>
    </util:list>

    <bean id="x509STSProperties" class="org.apache.cxf.sts.StaticSTSProperties">
        <property name="signaturePropertiesFile" value="stsKeystore.properties" />
        <property name="signatureUsername" value="mystskey" />
        <property name="callbackHandlerClass" value="sts.PasswordCallbackHandler" />
        <property name="issuer" value="DoubleItSTSIssuer" />
    </bean>

    <jaxws:endpoint id="X509STS" implementor="#x509STSProviderBean"
        address="/X509" wsdlLocation="WEB-INF/wsdl/DoubleItSTSService.wsdl"
        xmlns:ns1="http://docs.oasis-open.org/ws-sx/ws-trust/200512/"
        serviceName="ns1:SecurityTokenService" endpointName="ns1:X509_Port">
        <jaxws:properties>
            <entry key="security.callback-handler"
                value="sts.PasswordCallbackHandler" />
            <entry key="security.signature.properties" value="stsKeystore.properties" />
            <entry key="security.signature.username" value="mystskey" />
            <entry key="security.encryption.username" value="useReqSigCert" />
        </jaxws:properties>
    </jaxws:endpoint>

</beans>
